{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rajpa\\\\Downloads\\\\mainproject-main\\\\mainproject-main\\\\Mernauthentication\\\\loginregreactjsmui1\\\\src\\\\pages\\\\auth\\\\UserLogin.js\",\n    _s = $RefreshSig$();\n\nimport { TextField, Button, Box, Alert, CircularProgress } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { useLoginUserMutation } from \"../../services/userAuthApi\";\nimport { getToken, storeToken } from \"../../services/LocalStorageService\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserToken } from \"../../features/authSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserLogin = () => {\n  _s();\n\n  const [error, setError] = useState({\n    status: false,\n    msg: \"\",\n    type: \"\"\n  });\n  const navigate = useNavigate();\n  const [loginUser, {\n    isLoading\n  }] = useLoginUserMutation();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const actualData = {\n      email: data.get(\"email\"),\n      password: data.get(\"password\")\n    };\n\n    if (actualData.email && actualData.password) {\n      const res = await loginUser(actualData);\n\n      if (res.data.status === \"success\") {\n        storeToken(res.data.token);\n        navigate(\"/dashboard\");\n      }\n\n      if (res.data.status === \"failed\") {\n        setError({\n          status: true,\n          msg: res.data.message,\n          type: \"error\"\n        });\n      }\n    } else {\n      setError({\n        status: true,\n        msg: \"All Fields are Required\",\n        type: \"error\"\n      });\n    }\n  };\n\n  let token = getToken(\"token\");\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(setUserToken({\n      token: token\n    }));\n  }, [token, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"container\",\n        component: \"form\",\n        noValidate: true,\n        id: \"login-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"email\",\n          required: true,\n          name: \"email\",\n          label: \"Standard\",\n          variant: \"standard\",\n          sx: {\n            mb: 3,\n            width: 300\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          id: \"password\",\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          variant: \"standard\",\n          sx: {\n            mb: 3,\n            width: 300\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            sx: {\n              mt: 1,\n              mb: 2,\n              px: 5\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), error.status ? /*#__PURE__*/_jsxDEV(Alert, {\n          severity: error.type,\n          sx: {\n            mt: 3\n          },\n          children: error.msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/sendpasswordresetemail\",\n        children: \"Forgot Password ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserLogin, \"lYtJIq5p/TPWblWZdnBsqZD+S1U=\", false, function () {\n  return [useNavigate, useLoginUserMutation, useDispatch];\n});\n\n_c = UserLogin;\nexport default UserLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserLogin\");","map":{"version":3,"sources":["C:/Users/rajpa/Downloads/mainproject-main/mainproject-main/Mernauthentication/loginregreactjsmui1/src/pages/auth/UserLogin.js"],"names":["TextField","Button","Box","Alert","CircularProgress","useEffect","useState","NavLink","useNavigate","useLoginUserMutation","getToken","storeToken","useDispatch","setUserToken","UserLogin","error","setError","status","msg","type","navigate","loginUser","isLoading","handleSubmit","e","preventDefault","data","FormData","currentTarget","actualData","email","get","password","res","token","message","dispatch","mb","width","mt","px"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,KAAjC,EAAwCC,gBAAxC,QAAgE,eAAhE;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,kBAArC;AACA,SAASC,oBAAT,QAAqC,4BAArC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,oCAArC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,0BAA7B;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC;AACjCW,IAAAA,MAAM,EAAE,KADyB;AAEjCC,IAAAA,GAAG,EAAE,EAF4B;AAGjCC,IAAAA,IAAI,EAAE;AAH2B,GAAD,CAAlC;AAKA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM,CAACa,SAAD,EAAY;AAAEC,IAAAA;AAAF,GAAZ,IAA6Bb,oBAAoB,EAAvD;;AACA,QAAMc,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAaH,CAAC,CAACI,aAAf,CAAb;AACA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,KAAK,EAAEJ,IAAI,CAACK,GAAL,CAAS,OAAT,CADU;AAEjBC,MAAAA,QAAQ,EAAEN,IAAI,CAACK,GAAL,CAAS,UAAT;AAFO,KAAnB;;AAIA,QAAIF,UAAU,CAACC,KAAX,IAAoBD,UAAU,CAACG,QAAnC,EAA6C;AAC3C,YAAMC,GAAG,GAAG,MAAMZ,SAAS,CAACQ,UAAD,CAA3B;;AACA,UAAII,GAAG,CAACP,IAAJ,CAAST,MAAT,KAAoB,SAAxB,EAAmC;AACjCN,QAAAA,UAAU,CAACsB,GAAG,CAACP,IAAJ,CAASQ,KAAV,CAAV;AACAd,QAAAA,QAAQ,CAAC,YAAD,CAAR;AACD;;AACD,UAAIa,GAAG,CAACP,IAAJ,CAAST,MAAT,KAAoB,QAAxB,EAAkC;AAChCD,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,MAAM,EAAE,IAAV;AAAgBC,UAAAA,GAAG,EAAEe,GAAG,CAACP,IAAJ,CAASS,OAA9B;AAAuChB,UAAAA,IAAI,EAAE;AAA7C,SAAD,CAAR;AACD;AACF,KATD,MASO;AACLH,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,MAAM,EAAE,IAAV;AAAgBC,QAAAA,GAAG,EAAE,yBAArB;AAAgDC,QAAAA,IAAI,EAAE;AAAtD,OAAD,CAAR;AACD;AACF,GAnBD;;AAqBA,MAAIe,KAAK,GAAGxB,QAAQ,CAAC,OAAD,CAApB;AACA,QAAM0B,QAAQ,GAAGxB,WAAW,EAA5B;AACAP,EAAAA,SAAS,CAAC,MAAM;AACd+B,IAAAA,QAAQ,CAACvB,YAAY,CAAC;AAAEqB,MAAAA,KAAK,EAAEA;AAAT,KAAD,CAAb,CAAR;AACD,GAFQ,EAEN,CAACA,KAAD,EAAQE,QAAR,CAFM,CAAT;AAIA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,SAAS,EAAC,MAFZ;AAGE,QAAA,UAAU,MAHZ;AAIE,QAAA,EAAE,EAAC,YAJL;AAKE,QAAA,QAAQ,EAAEb,YALZ;AAAA,gCAQE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,OADL;AAEE,UAAA,QAAQ,MAFV;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,KAAK,EAAC,UAJR;AAKE,UAAA,OAAO,EAAC,UALV;AAME,UAAA,EAAE,EAAE;AAACc,YAAAA,EAAE,EAAC,CAAJ;AAAMC,YAAAA,KAAK,EAAC;AAAZ;AANN;AAAA;AAAA;AAAA;AAAA,gBARF,eAgBE;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAiBE,QAAC,SAAD;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,KAAK,EAAC,UAJR;AAKE,UAAA,IAAI,EAAC,UALP;AAME,UAAA,OAAO,EAAC,UANV;AAOE,UAAA,EAAE,EAAE;AAACD,YAAAA,EAAE,EAAC,CAAJ;AAAMC,YAAAA,KAAK,EAAC;AAAZ;AAPN;AAAA;AAAA;AAAA;AAAA,gBAjBF,eA0BE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,oBACGhB,SAAS,gBACR,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,kBADQ,gBAGR,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,OAAO,EAAC,WAFV;AAGE,YAAA,EAAE,EAAE;AAAEiB,cAAAA,EAAE,EAAE,CAAN;AAASF,cAAAA,EAAE,EAAE,CAAb;AAAgBG,cAAAA,EAAE,EAAE;AAApB,aAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBA1BF,EAuCGzB,KAAK,CAACE,MAAN,gBACC,QAAC,KAAD;AAAO,UAAA,QAAQ,EAAEF,KAAK,CAACI,IAAvB;AAA6B,UAAA,EAAE,EAAE;AAAEoB,YAAAA,EAAE,EAAE;AAAN,WAAjC;AAAA,oBACGxB,KAAK,CAACG;AADT;AAAA;AAAA;AAAA;AAAA,gBADD,GAKC,EA5CJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgDE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,yBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAsDD,CAzFD;;GAAMJ,S;UAMaN,W,EACkBC,oB,EAuBlBG,W;;;KA9BbE,S;AA2FN,eAAeA,SAAf","sourcesContent":["import { TextField, Button, Box, Alert, CircularProgress } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { useLoginUserMutation } from \"../../services/userAuthApi\";\nimport { getToken, storeToken } from \"../../services/LocalStorageService\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserToken } from \"../../features/authSlice\";\n\nconst UserLogin = () => {\n  const [error, setError] = useState({\n    status: false,\n    msg: \"\",\n    type: \"\",\n  });\n  const navigate = useNavigate();\n  const [loginUser, { isLoading }] = useLoginUserMutation();\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const actualData = {\n      email: data.get(\"email\"),\n      password: data.get(\"password\"),\n    };\n    if (actualData.email && actualData.password) {\n      const res = await loginUser(actualData);\n      if (res.data.status === \"success\") {\n        storeToken(res.data.token);\n        navigate(\"/dashboard\");\n      }\n      if (res.data.status === \"failed\") {\n        setError({ status: true, msg: res.data.message, type: \"error\" });\n      }\n    } else {\n      setError({ status: true, msg: \"All Fields are Required\", type: \"error\" });\n    }\n  };\n\n  let token = getToken(\"token\");\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(setUserToken({ token: token }));\n  }, [token, dispatch]);\n\n  return (\n    <>\n      <div className=\"container\">\n        <form\n          className=\"container\"\n          component=\"form\"\n          noValidate\n          id=\"login-form\"\n          onSubmit={handleSubmit}\n        >\n      \n          <TextField\n            id=\"email\"\n            required\n            name=\"email\"\n            label=\"Standard\"\n            variant=\"standard\"\n            sx={{mb:3,width:300, }}\n          />\n          <br />\n          <TextField\n            required\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            variant=\"standard\"\n            sx={{mb:3,width:300 }}\n          />\n          <Box textAlign=\"center\">\n            {isLoading ? (\n              <CircularProgress />\n            ) : (\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                sx={{ mt: 1, mb: 2, px: 5 }}\n              >\n                Login\n              </Button>\n            )}\n          </Box>\n          {error.status ? (\n            <Alert severity={error.type} sx={{ mt: 3 }}>\n              {error.msg}\n            </Alert>\n          ) : (\n            \"\"\n          )}\n        </form>\n        <NavLink to=\"/sendpasswordresetemail\">Forgot Password ?</NavLink>\n      </div>\n    </>\n  );\n};\n\nexport default UserLogin;\n"]},"metadata":{},"sourceType":"module"}