{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rajpa\\\\Downloads\\\\mainproject-main\\\\mainproject-main\\\\Mernauthentication\\\\loginregreactjsmui1\\\\src\\\\pages\\\\auth\\\\ChangePassword.js\",\n    _s = $RefreshSig$();\n\nimport { Box, TextField, Button, Alert } from '@mui/material';\nimport { useState } from 'react';\nimport { useChangeUserPasswordMutation } from '../../services/userAuthApi';\nimport { getToken } from '../../services/LocalStorageService';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChangePassword = () => {\n  _s();\n\n  const [error, setError] = useState({\n    status: false,\n    msg: \"\",\n    type: \"\"\n  });\n  const [changeUserPassword] = useChangeUserPasswordMutation();\n  const token = getToken('token');\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const actualData = {\n      password: data.get('password'),\n      password_confirmation: data.get('password_confirmation')\n    };\n\n    if (actualData.password && actualData.password_confirmation) {\n      if (actualData.password === actualData.password_confirmation) {\n        const res = await changeUserPassword({\n          actualData,\n          token\n        });\n\n        if (res.data.status === \"success\") {\n          document.getElementById(\"password-change-form\").reset();\n          setError({\n            status: true,\n            msg: \"Password Changed Successful\",\n            type: \"success\"\n          });\n        }\n\n        if (res.data.status === \"failed\") {\n          setError({\n            status: true,\n            msg: res.data.message,\n            type: \"error\"\n          });\n        }\n      } else {\n        setError({\n          status: true,\n          msg: \"Password and Confirm Password Doesn't Match\",\n          type: \"error\"\n        });\n      }\n    } else {\n      setError({\n        status: true,\n        msg: \"All Fields are Required\",\n        type: \"error\"\n      });\n    }\n  }; // Getting User Data from Redux Store\n\n\n  const myData = useSelector(state => state.user);\n  console.log(\"Change Password\", myData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        flexWrap: 'wrap',\n        maxWidth: 600,\n        mx: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        noValidate: true,\n        sx: {\n          mt: 1\n        },\n        id: \"password-change-form\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"New Password\",\n          type: \"password\",\n          id: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password_confirmation\",\n          label: \"Confirm New Password\",\n          type: \"password\",\n          id: \"password_confirmation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2,\n              px: 5\n            },\n            children: \" Update \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), error.status ? /*#__PURE__*/_jsxDEV(Alert, {\n          severity: error.type,\n          children: error.msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(ChangePassword, \"GgDvDNqV9oRFstjr1XU8J568+pA=\", false, function () {\n  return [useChangeUserPasswordMutation, useSelector];\n});\n\n_c = ChangePassword;\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["C:/Users/rajpa/Downloads/mainproject-main/mainproject-main/Mernauthentication/loginregreactjsmui1/src/pages/auth/ChangePassword.js"],"names":["Box","TextField","Button","Alert","useState","useChangeUserPasswordMutation","getToken","useSelector","ChangePassword","error","setError","status","msg","type","changeUserPassword","token","handleSubmit","event","preventDefault","data","FormData","currentTarget","actualData","password","get","password_confirmation","res","document","getElementById","reset","message","myData","state","user","console","log","display","flexDirection","flexWrap","maxWidth","mx","mt","mb","px"],"mappings":"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","sourcesContent":["import { Box, TextField, Button, Alert } from '@mui/material';\nimport { useState } from 'react';\nimport { useChangeUserPasswordMutation } from '../../services/userAuthApi';\nimport { getToken } from '../../services/LocalStorageService'\nimport { useSelector } from 'react-redux';\n\nconst ChangePassword = () => {\n  const [error, setError] = useState({\n    status: false,\n    msg: \"\",\n    type: \"\"\n  });\n  const [changeUserPassword] = useChangeUserPasswordMutation()\n  const token = getToken('token')\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const actualData = {\n      password: data.get('password'),\n      password_confirmation: data.get('password_confirmation'),\n    }\n    if (actualData.password && actualData.password_confirmation) {\n      if (actualData.password === actualData.password_confirmation) {\n        const res = await changeUserPassword({ actualData, token })\n        if (res.data.status === \"success\") {\n          document.getElementById(\"password-change-form\").reset();\n          setError({ status: true, msg: \"Password Changed Successful\", type: \"success\" });\n        }\n        if (res.data.status === \"failed\") {\n          setError({ status: true, msg: res.data.message, type: \"error\" });\n        }\n      } else {\n        setError({ status: true, msg: \"Password and Confirm Password Doesn't Match\", type: \"error\" })\n      }\n    } else {\n      setError({ status: true, msg: \"All Fields are Required\", type: \"error\" })\n    }\n  };\n\n  // Getting User Data from Redux Store\n  const myData = useSelector(state => state.user)\n  console.log(\"Change Password\", myData)\n\n  return <>\n    <Box sx={{ display: 'flex', flexDirection: 'column', flexWrap: 'wrap', maxWidth: 600, mx: 4 }}>\n      <h1>Change Password</h1>\n      <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }} id=\"password-change-form\">\n        <TextField margin=\"normal\" required fullWidth name=\"password\" label=\"New Password\" type=\"password\" id=\"password\" />\n        <TextField margin=\"normal\" required fullWidth name=\"password_confirmation\" label=\"Confirm New Password\" type=\"password\" id=\"password_confirmation\" />\n        <Box textAlign='center'>\n          <Button type=\"submit\" variant=\"contained\" sx={{ mt: 3, mb: 2, px: 5 }}> Update </Button>\n        </Box>\n        {error.status ? <Alert severity={error.type}>{error.msg}</Alert> : \"\"}\n      </Box>\n    </Box>\n  </>;\n};\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}