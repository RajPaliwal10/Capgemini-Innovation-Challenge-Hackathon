{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const userAuthApi = createApi({\n  reducerPath: 'userAuthApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://127.0.0.1:8000/api/user/'\n  }),\n  endpoints: builder => ({\n    registerUser: builder.mutation({\n      query: user => {\n        return {\n          url: 'register',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json'\n          }\n        };\n      }\n    }),\n    loginUser: builder.mutation({\n      query: user => {\n        return {\n          url: 'login',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json'\n          }\n        };\n      }\n    }),\n    sendPasswordResetEmail: builder.mutation({\n      query: user => {\n        return {\n          url: 'send-reset-password-email',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json'\n          }\n        };\n      }\n    }),\n    resetPassword: builder.mutation({\n      query: _ref => {\n        let {\n          actualData,\n          id,\n          token\n        } = _ref;\n        return {\n          url: `/reset-password/${id}/${token}`,\n          method: 'POST',\n          body: actualData,\n          headers: {\n            'Content-type': 'application/json'\n          }\n        };\n      }\n    }),\n    getLoggedUser: builder.query({\n      query: token => {\n        return {\n          url: `loggeduser`,\n          method: 'GET',\n          headers: {\n            'authorization': `Bearer ${token}`\n          }\n        };\n      }\n    }),\n    changeUserPassword: builder.mutation({\n      query: _ref2 => {\n        let {\n          actualData,\n          token\n        } = _ref2;\n        return {\n          url: 'changepassword',\n          method: 'POST',\n          body: actualData,\n          headers: {\n            'authorization': `Bearer ${token}`\n          }\n        };\n      }\n    })\n  })\n});\nexport const {\n  useRegisterUserMutation,\n  useLoginUserMutation,\n  useSendPasswordResetEmailMutation,\n  useResetPasswordMutation,\n  useGetLoggedUserQuery,\n  useChangeUserPasswordMutation\n} = userAuthApi;","map":{"version":3,"sources":["C:/Users/rajpa/Downloads/mainproject-main/mainproject-main/Mernauthentication/loginregreactjsmui1/src/services/userAuthApi.js"],"names":["createApi","fetchBaseQuery","userAuthApi","reducerPath","baseQuery","baseUrl","endpoints","builder","registerUser","mutation","query","user","url","method","body","headers","loginUser","sendPasswordResetEmail","resetPassword","actualData","id","token","getLoggedUser","changeUserPassword","useRegisterUserMutation","useLoginUserMutation","useSendPasswordResetEmailMutation","useResetPasswordMutation","useGetLoggedUserQuery","useChangeUserPasswordMutation"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,OAAO,MAAMC,WAAW,GAAGF,SAAS,CAAC;AACnCG,EAAAA,WAAW,EAAE,aADsB;AAEnCC,EAAAA,SAAS,EAAEH,cAAc,CAAC;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAD,CAFU;AAInCC,EAAAA,SAAS,EAAGC,OAAD,KAAc;AAEvBC,IAAAA,YAAY,EAAED,OAAO,CAACE,QAAR,CAAiB;AAC7BC,MAAAA,KAAK,EAAGC,IAAD,IAAU;AACf,eAAO;AACLC,UAAAA,GAAG,EAAE,UADA;AAELC,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,IAAI,EAAEH,IAHD;AAILI,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAJJ,SAAP;AAQD;AAV4B,KAAjB,CAFS;AAevBC,IAAAA,SAAS,EAAET,OAAO,CAACE,QAAR,CAAiB;AAC1BC,MAAAA,KAAK,EAAGC,IAAD,IAAU;AACf,eAAO;AACLC,UAAAA,GAAG,EAAE,OADA;AAELC,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,IAAI,EAAEH,IAHD;AAILI,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAJJ,SAAP;AAQD;AAVyB,KAAjB,CAfY;AA2BvBE,IAAAA,sBAAsB,EAAEV,OAAO,CAACE,QAAR,CAAiB;AACvCC,MAAAA,KAAK,EAAGC,IAAD,IAAU;AACf,eAAO;AACLC,UAAAA,GAAG,EAAE,2BADA;AAELC,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,IAAI,EAAEH,IAHD;AAILI,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAJJ,SAAP;AAQD;AAVsC,KAAjB,CA3BD;AAuCvBG,IAAAA,aAAa,EAAEX,OAAO,CAACE,QAAR,CAAiB;AAC9BC,MAAAA,KAAK,EAAE,QAA+B;AAAA,YAA9B;AAAES,UAAAA,UAAF;AAAcC,UAAAA,EAAd;AAAkBC,UAAAA;AAAlB,SAA8B;AACpC,eAAO;AACLT,UAAAA,GAAG,EAAG,mBAAkBQ,EAAG,IAAGC,KAAM,EAD/B;AAELR,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,IAAI,EAAEK,UAHD;AAILJ,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAJJ,SAAP;AAQD;AAV6B,KAAjB,CAvCQ;AAmDvBO,IAAAA,aAAa,EAAEf,OAAO,CAACG,KAAR,CAAc;AAC3BA,MAAAA,KAAK,EAAGW,KAAD,IAAW;AAChB,eAAO;AACLT,UAAAA,GAAG,EAAG,YADD;AAELC,UAAAA,MAAM,EAAE,KAFH;AAGLE,UAAAA,OAAO,EAAE;AACP,6BAAkB,UAASM,KAAM;AAD1B;AAHJ,SAAP;AAOD;AAT0B,KAAd,CAnDQ;AA8DvBE,IAAAA,kBAAkB,EAAEhB,OAAO,CAACE,QAAR,CAAiB;AACnCC,MAAAA,KAAK,EAAE,SAA2B;AAAA,YAA1B;AAAES,UAAAA,UAAF;AAAcE,UAAAA;AAAd,SAA0B;AAChC,eAAO;AACLT,UAAAA,GAAG,EAAE,gBADA;AAELC,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,IAAI,EAAEK,UAHD;AAILJ,UAAAA,OAAO,EAAE;AACP,6BAAkB,UAASM,KAAM;AAD1B;AAJJ,SAAP;AAQD;AAVkC,KAAjB;AA9DG,GAAd;AAJwB,CAAD,CAA7B;AAiFP,OAAO,MAAM;AAAEG,EAAAA,uBAAF;AAA2BC,EAAAA,oBAA3B;AAAiDC,EAAAA,iCAAjD;AAAoFC,EAAAA,wBAApF;AAA8GC,EAAAA,qBAA9G;AAAqIC,EAAAA;AAArI,IAAuK3B,WAA7K","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const userAuthApi = createApi({\n  reducerPath: 'userAuthApi',\n  baseQuery: fetchBaseQuery({ baseUrl: 'http://127.0.0.1:8000/api/user/' }),\n\n  endpoints: (builder) => ({\n\n    registerUser: builder.mutation({\n      query: (user) => {\n        return {\n          url: 'register',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json',\n          }\n        }\n      }\n    }),\n\n    loginUser: builder.mutation({\n      query: (user) => {\n        return {\n          url: 'login',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json',\n          }\n        }\n      }\n    }),\n    sendPasswordResetEmail: builder.mutation({\n      query: (user) => {\n        return {\n          url: 'send-reset-password-email',\n          method: 'POST',\n          body: user,\n          headers: {\n            'Content-type': 'application/json',\n          }\n        }\n      }\n    }),\n    resetPassword: builder.mutation({\n      query: ({ actualData, id, token }) => {\n        return {\n          url: `/reset-password/${id}/${token}`,\n          method: 'POST',\n          body: actualData,\n          headers: {\n            'Content-type': 'application/json',\n          }\n        }\n      }\n    }),\n    getLoggedUser: builder.query({\n      query: (token) => {\n        return {\n          url: `loggeduser`,\n          method: 'GET',\n          headers: {\n            'authorization': `Bearer ${token}`,\n          }\n        }\n      }\n    }),\n    changeUserPassword: builder.mutation({\n      query: ({ actualData, token }) => {\n        return {\n          url: 'changepassword',\n          method: 'POST',\n          body: actualData,\n          headers: {\n            'authorization': `Bearer ${token}`,\n          }\n        }\n      }\n    }),\n  }),\n})\n\nexport const { useRegisterUserMutation, useLoginUserMutation, useSendPasswordResetEmailMutation, useResetPasswordMutation, useGetLoggedUserQuery, useChangeUserPasswordMutation } = userAuthApi"]},"metadata":{},"sourceType":"module"}