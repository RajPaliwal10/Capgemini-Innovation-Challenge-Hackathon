{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rajpa\\\\Downloads\\\\mainproject-main\\\\mainproject-main\\\\Mernauthentication\\\\loginregreactjsmui1\\\\src\\\\pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { Button, CssBaseline, Grid, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { getToken, removeToken } from '../services/LocalStorageService';\nimport ChangePassword from './auth/ChangePassword';\nimport { useGetLoggedUserQuery } from '../services/userAuthApi';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setUserInfo, unsetUserInfo } from '../features/userSlice';\nimport { unsetUserToken } from '../features/authSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    dispatch(unsetUserToken({\n      token: null\n    }));\n    dispatch(unsetUserInfo({\n      name: \"\",\n      email: \"\"\n    }));\n    removeToken('token');\n    navigate('/login');\n  };\n\n  const token = getToken();\n  const {\n    data,\n    isSuccess\n  } = useGetLoggedUserQuery(token);\n  const [userData, setUserData] = useState({\n    email: \"\",\n    name: \"\"\n  }); // Store User Data in Local State\n\n  useEffect(() => {\n    if (data && isSuccess) {\n      setUserData({\n        email: data.user.email,\n        name: data.user.name\n      });\n    }\n  }, [data, isSuccess]); // Store User Data in Redux Store\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (data && isSuccess) {\n      dispatch(setUserInfo({\n        email: data.user.email,\n        name: data.user.name\n      }));\n    }\n  }, [data, isSuccess, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container2\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 4,\n          sx: {\n            backgroundColor: 'gray',\n            p: 5,\n            color: 'white'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: [\"Email: \", userData.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Name: \", userData.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"warning\",\n            size: \"large\",\n            onClick: handleLogout,\n            sx: {\n              mt: 8\n            },\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 8,\n          children: /*#__PURE__*/_jsxDEV(ChangePassword, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n\n_s(Dashboard, \"vEaGORVqah5C8DmEx9WD+hQAc90=\", false, function () {\n  return [useNavigate, useGetLoggedUserQuery, useDispatch];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/rajpa/Downloads/mainproject-main/mainproject-main/Mernauthentication/loginregreactjsmui1/src/pages/Dashboard.js"],"names":["Button","CssBaseline","Grid","Typography","useNavigate","getToken","removeToken","ChangePassword","useGetLoggedUserQuery","useEffect","useState","useDispatch","setUserInfo","unsetUserInfo","unsetUserToken","Dashboard","navigate","handleLogout","dispatch","token","name","email","data","isSuccess","userData","setUserData","user","backgroundColor","p","color","mt"],"mappings":"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","sourcesContent":["import { Button, CssBaseline, Grid, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { getToken, removeToken } from '../services/LocalStorageService';\nimport ChangePassword from './auth/ChangePassword';\nimport { useGetLoggedUserQuery } from '../services/userAuthApi';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setUserInfo, unsetUserInfo } from '../features/userSlice';\nimport { unsetUserToken } from '../features/authSlice';\nconst Dashboard = () => {\n  const navigate = useNavigate()\n  const handleLogout = () => {\n    dispatch(unsetUserToken({ token: null }))\n    dispatch(unsetUserInfo({ name: \"\", email: \"\" }))\n    removeToken('token')\n    navigate('/login')\n  }\n\n  const token = getToken()\n  const { data, isSuccess } = useGetLoggedUserQuery(token)\n\n  const [userData, setUserData] = useState({\n    email: \"\",\n    name: \"\"\n  })\n\n  // Store User Data in Local State\n  useEffect(() => {\n    if (data && isSuccess) {\n      setUserData({\n        email: data.user.email,\n        name: data.user.name,\n      })\n    }\n  }, [data, isSuccess])\n\n  // Store User Data in Redux Store\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (data && isSuccess) {\n      dispatch(setUserInfo({\n        email: data.user.email,\n        name: data.user.name\n      }))\n    }\n  }, [data, isSuccess, dispatch])\n\n  return <>\n  <div className=\"container2\">\n    <CssBaseline />\n    <Grid container>\n      <Grid item sm={4} sx={{ backgroundColor: 'gray', p: 5, color: 'white' }}>\n        <h1>Dashboard</h1>\n        <Typography variant='h5'>Email: {userData.email}</Typography>\n        <Typography variant='h6'>Name: {userData.name}</Typography>\n        <Button variant='contained' color='warning' size='large' onClick={handleLogout} sx={{ mt: 8 }}>Logout</Button>\n      </Grid>\n      <Grid item sm={8}>\n        <ChangePassword />\n      </Grid>\n    </Grid>\n    </div>\n  </>;\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}