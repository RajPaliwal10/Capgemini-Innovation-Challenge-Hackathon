{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rajpa\\\\Downloads\\\\mainproject-main\\\\mainproject-main\\\\Mernauthentication\\\\loginregreactjsmui1\\\\src\\\\pages\\\\auth\\\\SendPasswordResetEmail.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, TextField, Button, Box, Alert } from \"@mui/material\";\nimport { useState } from 'react';\nimport { useSendPasswordResetEmailMutation } from \"../../services/userAuthApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SendPasswordResetEmail = () => {\n  _s();\n\n  const [error, setError] = useState({\n    status: false,\n    msg: \"\",\n    type: \"\"\n  });\n  const [sendPasswordResetEmail, {\n    isLoading\n  }] = useSendPasswordResetEmailMutation();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const actualData = {\n      email: data.get('email')\n    };\n\n    if (actualData.email) {\n      const res = await sendPasswordResetEmail(actualData);\n\n      if (res.data.status === \"success\") {\n        document.getElementById('password-reset-email-form').reset();\n        setError({\n          status: true,\n          msg: \"Password Reset Email Sent. Check Your Email !!\",\n          type: 'success'\n        });\n      }\n\n      if (res.data.status === \"failed\") {\n        setError({\n          status: true,\n          msg: res.data.message,\n          type: 'error'\n        });\n      }\n    } else {\n      setError({\n        status: true,\n        msg: \"Please Provide Valid Email\",\n        type: 'error'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 6,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          noValidate: true,\n          sx: {\n            mt: 1\n          },\n          id: \"password-reset-email-form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"email\",\n            name: \"email\",\n            label: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2,\n                px: 5\n              },\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this), error.status ? /*#__PURE__*/_jsxDEV(Alert, {\n            severity: error.type,\n            children: error.msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 27\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(SendPasswordResetEmail, \"EuJeKe7ffptX2aSO3v3BuMjSaVs=\", false, function () {\n  return [useSendPasswordResetEmailMutation];\n});\n\n_c = SendPasswordResetEmail;\nexport default SendPasswordResetEmail;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendPasswordResetEmail\");","map":{"version":3,"sources":["C:/Users/rajpa/Downloads/mainproject-main/mainproject-main/Mernauthentication/loginregreactjsmui1/src/pages/auth/SendPasswordResetEmail.js"],"names":["Grid","TextField","Button","Box","Alert","useState","useSendPasswordResetEmailMutation","SendPasswordResetEmail","error","setError","status","msg","type","sendPasswordResetEmail","isLoading","handleSubmit","e","preventDefault","data","FormData","currentTarget","actualData","email","get","res","document","getElementById","reset","message","mt","mb","px"],"mappings":"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","sourcesContent":["import { Grid, TextField, Button, Box, Alert } from \"@mui/material\";\nimport { useState } from 'react';\nimport { useSendPasswordResetEmailMutation } from \"../../services/userAuthApi\";\n\n\nconst SendPasswordResetEmail = () => {\n  const [error, setError] = useState({\n    status: false,\n    msg: \"\",\n    type: \"\"\n  })\n  const [sendPasswordResetEmail, { isLoading }] = useSendPasswordResetEmailMutation()\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const actualData = {\n      email: data.get('email'),\n    }\n    if (actualData.email) {\n      const res = await sendPasswordResetEmail(actualData)\n      if (res.data.status === \"success\") {\n        document.getElementById('password-reset-email-form').reset()\n        setError({ status: true, msg: \"Password Reset Email Sent. Check Your Email !!\", type: 'success' })\n      }\n      if (res.data.status === \"failed\") {\n        setError({ status: true, msg: res.data.message, type: 'error' })\n      }\n    } else {\n      setError({ status: true, msg: \"Please Provide Valid Email\", type: 'error' })\n    }\n  }\n  return <>\n    <Grid container justifyContent='center'>\n      <Grid item sm={6} xs={12}>\n        <h1>Reset Password</h1>\n        <Box component='form' noValidate sx={{ mt: 1 }} id='password-reset-email-form' onSubmit={handleSubmit}>\n          <TextField margin='normal' required fullWidth id='email' name='email' label='Email Address' />\n          <Box textAlign='center'>\n            <Button type='submit' variant='contained' sx={{ mt: 3, mb: 2, px: 5 }}>Send</Button>\n          </Box>\n          {error.status ? <Alert severity={error.type}>{error.msg}</Alert> : ''}\n        </Box>\n      </Grid>\n    </Grid>\n  </>;\n};\n\nexport default SendPasswordResetEmail;\n"]},"metadata":{},"sourceType":"module"}